using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Media;
using static System.Net.Mime.MediaTypeNames;
using System.CodeDom.Compiler;
using System.Reflection;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;


namespace AquaBall2_0
{
    public class Map2
    {
        string sLevel;
        int nLevelWidth = 90;
        int nLevelHeight = 66;
        int pinQuantity = 0;
        public Map2(Size size, ref Caramelo caramelo, ref VElement Verlets)
        {

            //2 para dibujo azul
            //1 para pin


            sLevel = "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..............................................*...........................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "...........................1-.-.-.-1......................1-.-.-.-1.......................";
            sLevel += "...........................1.......1......................1.......1.......................";
            sLevel += "...........................1.......1......................1.......1.......................";
            sLevel += "...........................1.......1......................1.......1.......................";
            sLevel += "...........................1.......1......................1.......1.......................";
            sLevel += "...........................111111111......................111111111.......................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "....................1-.-.-.-1....................................1-.-.-.-1................";
            sLevel += "....................1.......1....................................1.......1................";
            sLevel += "....................1.......1.............2......2...............1.......1................";
            sLevel += "....................1.......1..............2....2................1.......1................";
            sLevel += "....................1.......1...............2..2.................1.......1................";
            sLevel += "....................111111111................22..................111111111................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "............1-.-.-.-1........................................................1-.-.-.-1....";
            sLevel += "............1.......1........................................................1.......1....";
            sLevel += "............1.......1........................................................1.......1....";
            sLevel += "............1.......1........................................................1.......1....";
            sLevel += "............1.......1........................................................1.......1....";
            sLevel += "............111111111........................................................111111111....";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";
            sLevel += "..........................................................................................";


            int nTileWidth = size.Width / nLevelWidth;
            int nTileHeight = size.Height / nLevelHeight;

            Size bmp = new Size(2 * size.Width, size.Height);



            for (int y = 0; y < nLevelHeight; y++)
            {
                for (int x = 0; x < nLevelWidth; x++)
                {
                    int index = y * nLevelWidth + x;
                    if (sLevel[index] == '*')
                    {
                        // Calcula la posición del caramelo basada en el índice del tile
                        Vector2 posicion = new Vector2(x * nTileWidth, y * nTileHeight);
                        caramelo = new Caramelo(x * nTileWidth, y * nTileHeight, 100000, size.Width, size.Height);
                        //caramelo.punto.old.X = -0.01f;
                        Verlets.Points.Add(caramelo.punto);
                    }

                }
            }
            for (int y = 0; y < nLevelHeight; y++)
            {
                for (int x = 0; x < nLevelWidth; x++)
                {
                    int index = y * nLevelWidth + x;
                    switch (sLevel[index])
                    {
                        case '.':
                            break;

                        case '1':
                            Pin pin1 = new Pin(x * nTileWidth, y * nTileHeight, pinQuantity, bmp.Width, bmp.Height);
                            Verlets.addPoint(pin1.punto);
                            pinQuantity++;
                            break;


                        case '2':
                            Pin pin = new Pin(x * nTileWidth, y * nTileHeight, pinQuantity, bmp.Width, bmp.Height);
                            Verlets.addPoint(pin.punto);
                            pinQuantity++;
                            break;

                        case '-':
                            Pin pin2 = new Pin(x * nTileWidth, y * nTileHeight, pinQuantity, bmp.Width, bmp.Height);
                            pin2.punto.IsVisible = false;
                            pin2.punto.isTangible = false;
                            pin2.punto.value = 100;

                            Verlets.addPoint(pin2.punto);
                            pinQuantity++;
                            break;

                        case '+':
                            Pin pin3 = new Pin(x * nTileWidth, y * nTileHeight, pinQuantity, bmp.Width, bmp.Height);
                            pin3.punto.IsVisible = false;
                            pin3.punto.isTangible = false;
                            pin3.punto.value = 200;
                            Verlets.addPoint(pin3.punto);
                            pinQuantity++;
                            break;

                        case 'h':
                            Pin pin4 = new Pin(x * nTileWidth, y * nTileHeight, pinQuantity, bmp.Width, bmp.Height);
                            pin4.punto.IsVisible = false;
                            pin4.punto.isTangible = false;
                            pin4.punto.value = 300;
                            Verlets.addPoint(pin4.punto);
                            pinQuantity++;
                            break;

                    }
                }
            }


        }

        public void AddBall(Vector2 mousePosition, Size size, ref Caramelo caramelo, ref VElement Verlets)
        {
            int nTileWidth = size.Width / nLevelWidth;
            int nTileHeight = size.Height / nLevelHeight;

            // Convertir las coordenadas del ratón a las coordenadas del nivel
            int x = (int)(mousePosition.X / nTileWidth);
            int y = (int)(mousePosition.Y / nTileHeight);

            // Asegurarse de que las coordenadas estén dentro de los límites del nivel
            x = MathHelper.Clamp(x, 0, nLevelWidth - 1);
            y = MathHelper.Clamp(y, 0, nLevelHeight - 1);

            int index = y * nLevelWidth + x;

            // Verificar si la posición es un espacio válido para colocar la pelota
            if (sLevel[index] == '.')
            {
                // Calcula la posición del caramelo basada en las coordenadas del nivel
                Vector2 posicion = new Vector2(x * nTileWidth, y * nTileHeight);
                caramelo = new Caramelo(x * nTileWidth, y * nTileHeight, 100000, size.Width, size.Height);
                Verlets.Points.Add(caramelo.punto);
                Global.pelotas--;
            }
        }


        public void SetTile(float x, float y, char c)//changes the tile
        {
            if (x >= 0 && x < nLevelWidth && y >= 0 && y < nLevelHeight)
            {
                int index = (int)y * nLevelWidth + (int)x;
                sLevel = sLevel.Remove(index, 1).Insert(index, c.ToString());
                //score += 100;
            }
        }

        public char GetTile(float x, float y)
        {
            if (x >= 0 && x < nLevelWidth && y >= 0 && y < nLevelHeight)
                return sLevel[(int)y * nLevelWidth + (int)x];
            else
                return ' ';
        }

    }
}
